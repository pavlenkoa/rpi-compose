name: immich
services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - /media/immich/photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_HOSTNAME=database
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=immich
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=redis
      - NODE_ENV=production
      - DISABLE_MACHINE_LEARNING=true
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 384M

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - model-cache:/cache
    environment:
      - NODE_ENV=production
      - MACHINE_LEARNING_WORKERS=1
      - MACHINE_LEARNING_THREAD_COUNT=1
      - DISABLE_MACHINE_LEARNING=true
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: always

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine
    command: redis-server --save 60 1 --loglevel warning --maxmemory 128mb --maxmemory-policy allkeys-lru
    restart: always
    deploy:
      resources:
        limits:
          memory: 128M

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: immich
      POSTGRES_DB: immich
    volumes:
      - /media/immich/database:/var/lib/postgresql/data
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=off
      -c shared_buffers=256MB
      -c work_mem=16MB
      -c maintenance_work_mem=128MB
      -c effective_cache_size=512MB
      -c max_wal_size=1GB
      -c wal_compression=on
    deploy:
      resources:
        limits:
          memory: 512M
    restart: always

volumes:
  model-cache:
